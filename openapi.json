{
    "schemes": [],
    "swagger": "2.0",
    "info": {
        "description": "SafeLine-CE mgt API swagger document.",
        "title": "SafeLine-CE mgt API",
        "contact": {},
        "version": "2.0"
    },
    "host": "",
    "basePath": "/api",
    "paths": {
        "/ManagerInfo": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "get blocking message",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GetManagerInfoRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "update blocking message",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PutManagerInfoReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/business/account": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "get login security config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.AccountConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "set login security config",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AccountConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/business/anti_tamper/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anti_tamper"
                ],
                "summary": "get anti tamper detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "anti_tamper id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/site.AntiTamperDetailRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anti_tamper"
                ],
                "summary": "update anti tamper",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "anti_tamper id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anti_tamper"
                ],
                "summary": "delete anti tamper",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "anti_tamper id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/business/anti_tamper/{id}/page": {
            "get": {
                "tags": [
                    "anti_tamper"
                ],
                "summary": "get anti tamper page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "anti_tamper id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 2,
                        "minimum": 1,
                        "type": "integer",
                        "name": "content",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/business/audit_log": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "get audit logs",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/audit_log.ListAuditLogRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/business/report": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "list report",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/report.ListRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "create report",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/report.CreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/business/report/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "get report detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "report id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/report.GetRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "delete report",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "report id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/business/site/{site_id}/anti_tamper": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anti_tamper"
                ],
                "summary": "list site anti tamper",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site_id",
                        "name": "site_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "changed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/site.AntiTamperListRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anti_tamper"
                ],
                "summary": "refresh anti tamper",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site_id",
                        "name": "site_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anti_tamper"
                ],
                "summary": "create anti tamper",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site_id",
                        "name": "site_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.AntiTamperCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/business/site/{site_id}/anti_tamper/resource/{resource_id}": {
            "get": {
                "tags": [
                    "anti_tamper"
                ],
                "summary": "get anti tamper resource",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "site_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "resource id",
                        "name": "resource_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/commercial/block_page": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "get block pages",
                "parameters": [
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GetSpecialPageRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "update block pages",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PutSpecialPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/commercial/block_page_list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "list block pages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.ListSpecialPageItem"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/commercial/record/export": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "attacks"
                ],
                "summary": "export attack logs",
                "parameters": [
                    {
                        "type": "string",
                        "name": "action",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "attack_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "event_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "host",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "ip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "port",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/commercial/skynet/rule": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enhance_rule"
                ],
                "summary": "update enhance rule",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PutSkynetRuleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/commercial/syslog": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "get syslog config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.ReceiverConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "update syslog config",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ReceiverConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/commercial/syslog/test": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "syslog test",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ReceiverConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/commercial/webhook": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "get attack alert config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/webhook.WebhookConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "update attack alert config",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webhook.WebhookConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/commercial/webhook/test": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "attack alert config test",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TestWebHookConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/Commercial/downgrade": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "get downgrade status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GetDowngradeVersionRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "downgrade",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/acl/relieve": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratelimit"
                ],
                "summary": "ratelimit unblock",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "requests",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ACLRelieveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/auth/csrf": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "get csrf token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/auth.GetCsrfTokenRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "username password login",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/auth.LoginRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/auth/logout": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/auth/tfa": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "tfa login",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.TfaReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/auth.TfaRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/auth/token": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "get API token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "update API token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "delete API token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/cert": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ssl_cert"
                ],
                "summary": "list cert",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GetCertListRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ssl_cert"
                ],
                "summary": "upsert cert",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "requests",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cert.CertDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/cert/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ssl_cert"
                ],
                "summary": "get cert detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cert id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/cert.CertDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ssl_cert"
                ],
                "summary": "delete cert",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cert id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/cloud/policies": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cloud"
                ],
                "summary": "get cloud policies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/git_in_chaitin_net_patronus_safeline-2_management_webserver_api_cloud.ListItem"
                            }
                        }
                    }
                }
            }
        },
        "/open/cloud/policies/subscribe": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cloud"
                ],
                "summary": "subscribe cloud policy",
                "parameters": [
                    {
                        "description": "id",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.SubCloudPolicyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/open/dashboard/intercepts": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get basic intercepts last 30 days",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.DashboardTrendRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/dashboard/requests": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get basic requests last 30 days",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.DashboardTrendRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/dashboard/user/counts": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get basic access info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GetDashboardUserCountsReq"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/detector": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "get detector performance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GetDetectorRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "update detector performance",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PostDetectorReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/events": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attacks"
                ],
                "summary": "get attack events",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "host",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "ip",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "port",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "start",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/record.EventListRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/global/acl": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratelimit"
                ],
                "summary": "get global ratelimit config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/acl.SiteACLConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratelimit"
                ],
                "summary": "set global ratelimit config",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/acl.SiteACLConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/acl.SiteACLConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/global/log_clean": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "get clear data interval",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.LogMaxDayConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "update clear data interval",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LogMaxDayConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/global/mode": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "detection_mod"
                ],
                "summary": "get detection mod",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GetGlobalModeConfigRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "detection_mod"
                ],
                "summary": "update detection mod",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GlobalModeConfigParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/global/proxy": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "global_settings"
                ],
                "summary": "get global settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.ProxyConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "global_settings"
                ],
                "summary": "set global settings",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proxy.Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.ProxyConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/intelligence": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "get malicious ip sharing plan",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Intelligence"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "update malicious ip sharing plan",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PutThreatInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/intelligence/ip_lib": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "通用配置"
                ],
                "summary": "update malicious ip group",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PutThreatLibRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/ipgroup": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "list ip group",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "top",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GetIPGroupRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "update ip group",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ipg.IPGroupVO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "create ip group",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ipg.IPGroupVO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "delete ip group",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DeleteIPGroupReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/ipgroup/append": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "add ip to ip group",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PostAppendIPGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/ipgroup/crawler": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "get search engine spider group id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "update search engine spider",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/ipgroup/detail": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "get ip group detail",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GetIPGroupDetailRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/ipgroup/link": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "get ip by link",
                "parameters": [
                    {
                        "type": "string",
                        "name": "href",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GetIPGroupByLinkRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "create ip group by link",
                "parameters": [
                    {
                        "type": "string",
                        "name": "comment",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/policy": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customized_rules"
                ],
                "summary": "list customized rule",
                "parameters": [
                    {
                        "maximum": 3,
                        "minimum": -1,
                        "type": "integer",
                        "name": "action",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/policy.ListPolicyRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customized_rules"
                ],
                "summary": "update customized rule",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/policy.PutPolicyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customized_rules"
                ],
                "summary": "create customized rule",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/policy.PostPolicyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customized_rules"
                ],
                "summary": "delete customized rule",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/policy.DeletePolicyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/policy/detail": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customized_rules"
                ],
                "summary": "get customized rule detail",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/policy.GetPolicyRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/policy/switch": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customized_rules"
                ],
                "summary": "enable/disable customized rule",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/policy.PutPolicySwitchReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/record/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attacks"
                ],
                "summary": "get attack log detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.DetectLog"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/records": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attacks"
                ],
                "summary": "get attack logs",
                "parameters": [
                    {
                        "type": "string",
                        "name": "action",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "attack_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "event_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "host",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "ip",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "port",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/record.GetDetectLogListRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/records/acl": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratelimit",
                    "logs"
                ],
                "summary": "get ratelimit log",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "created_at_begin",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "created_at_end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "ip",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "site",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/acl.GetACLLogsRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/records/auth_defense": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth",
                    "logs"
                ],
                "summary": "get auth logs",
                "parameters": [
                    {
                        "type": "string",
                        "name": "ip",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "site",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "started_at_begin",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "started_at_end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/auth_defense.GetAuthDefenseLogsRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/records/challenge": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anti-bot"
                ],
                "summary": "list anti-bot log",
                "parameters": [
                    {
                        "type": "string",
                        "name": "ip",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "site",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "started_at_begin",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "started_at_end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GetChallengeLogsRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/records/waiting": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WaitingRoom"
                ],
                "summary": "Get waiting room logs",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "site",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "started_at_begin",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "started_at_end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/site.WaitingRoomLogs"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/share_fingerprint": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "get share browser fingerprint info at block page or not",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "set share browser fingerprint info at block page or not",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SetShareFingerprintRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/site": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "list web service",
                "parameters": [
                    {
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/site.GetWebsiteRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "update web service",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.WebsiteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "create web service",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.WebsiteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "delete web service",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.DeleteWebsiteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/site/:id/waiting": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WaitingRoom"
                ],
                "summary": "Get website waiting room rule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "website id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.WaitingRoom"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WaitingRoom"
                ],
                "summary": "Set website waiting room rule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "website id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.SetWebsiteWaitingRoomReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.WaitingRoom"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/site/challenge": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "update web service anti-bot",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.PubWebsiteChallengeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/site/defense": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "update web service auth",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.PutWebsiteDefenseReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/site/healthcheck": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "get web service healthcheck",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.PostWebsiteHealthcheckReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/site/mode": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "update web service run mode",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.PutWebsiteModeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/site/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "get web service detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/site.GetWebsiteDetailRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/site/{id}/acl": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services",
                    "ratelimit"
                ],
                "summary": "get web service ratelimit config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/acl.SiteACLConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services",
                    "ratelimit"
                ],
                "summary": "set web service ratelimit config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/acl.SiteACLConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/acl.SiteACLConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/site/{id}/chaos": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dynamic"
                ],
                "summary": "get site dynamic",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Chaos"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dynamic"
                ],
                "summary": "create site dynamic",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.WebsiteChaosReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/site/{id}/excludes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "get web service routing collection config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.SiteCache"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "update web service routing collection config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resource.UpdateExcludesReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/site/{id}/log": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "list web service access/error log",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/site.ListLogItem"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/site/{id}/log/detail": {
            "get": {
                "tags": [
                    "web_services"
                ],
                "summary": "get web service access/error log detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/open/site/{id}/log/download": {
            "get": {
                "tags": [
                    "web_services"
                ],
                "summary": "download web service access/error log",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "filename",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/open/site/{id}/log/limit": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "get web service access/error log limit",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "set web service access/error log limit",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/site/{id}/nginx_config": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "get web service tengine config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/site.NginxConfigGetRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "update web service tengine config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.NginxConfigUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/site/{id}/proxy": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "get web service security",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.ProxyConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "set web service security",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proxy.Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.ProxyConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/site/{id}/resources": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "list web service routing",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.WebsiteResource"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "delete web service routing",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resource.RemoveReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/site/{id}/static": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "get web service static file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "path",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/tcd.FileInfo"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "rename web service static file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.RenameStaticReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "create web service static file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.AddStaticReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web_services"
                ],
                "summary": "delete web service static file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "site id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.DeleteStaticReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/skynet/rule": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enhance_rule"
                ],
                "summary": "get enhance rule",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GetSkynetRuleRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/skynet/rule/switch": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enhance_rule"
                ],
                "summary": "get enhance rule global status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enhance_rule"
                ],
                "summary": "update enhance rule global status",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PutSkynetRuleSwitchReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/system": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "get system info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/system.AboutRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "update management cert",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "requests",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.UpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/system/arch": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "get system arch",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/open/system/authorize": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "license"
                ],
                "summary": "get license",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/system.CodeApplyInfoRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "license"
                ],
                "summary": "reapply license",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "license"
                ],
                "summary": "apply license",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "requests",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.CodeApplyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "license"
                ],
                "summary": "delete license",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/system/protocol": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "get protocol status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "update protocol status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "list user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.GetUserListRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "update user",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "requests",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "create user",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "requests",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.CreateUserResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "delete user",
                "parameters": [
                    {
                        "description": "request params",
                        "name": "requests",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.DeleteUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONBody"
                        }
                    }
                }
            }
        },
        "/open/users/{id}/totp": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "reset user totp",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.CreateUserResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/advance/access": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get advanced access",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "begin_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/stat.AdvanceAccessRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/advance/attack": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get advanced intercept",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "begin_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/stat.AdvanceAttackRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/advance/client": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get advanced client",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "begin_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/stat.AdvanceClientRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/advance/domain": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get advanced domain",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "begin_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "refer",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "count": {
                                                        "type": "integer"
                                                    },
                                                    "domain": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/advance/error_status_code": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get advanced error status code",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "begin_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/stat.AdvanceErrorStatusCodeRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/advance/location": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get advanced geolocation",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "action",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "begin_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "global",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "count": {
                                                        "type": "integer"
                                                    },
                                                    "country": {
                                                        "type": "string"
                                                    },
                                                    "province": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/advance/page": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get advanced page",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "begin_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "refer",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "count": {
                                                        "type": "integer"
                                                    },
                                                    "page": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/advance/status_code": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get advanced status code",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "begin_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "count": {
                                                        "type": "integer"
                                                    },
                                                    "status_code": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/advance/trend/access": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get advanced access trend",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "begin_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "count": {
                                                        "type": "integer"
                                                    },
                                                    "time": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/advance/trend/intercept": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get advanced intercept trend",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "begin_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "count": {
                                                        "type": "integer"
                                                    },
                                                    "time": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/basic/access": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get basic access count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/stat.BasicAccessRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/basic/attack": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get basic attack",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/stat.BasicAttackRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/basic/error_status_code": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get basic error status code",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/stat.BasicErrorStatusCodeRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/basic/location": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get basic geolocation",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "global",
                        "name": "global",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "action",
                        "name": "action",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "count": {
                                                        "type": "integer"
                                                    },
                                                    "country": {
                                                        "type": "string"
                                                    },
                                                    "province": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stat/qps": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "get qps",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSONBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.QpsRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "acl.Config": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "block_min": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                },
                "enabled": {
                    "type": "boolean"
                },
                "exclude_content_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "period": {
                    "type": "integer"
                },
                "status_code": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "use_global": {
                    "type": "boolean"
                }
            }
        },
        "acl.GetACLLogsRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/acl.Log"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "acl.Log": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/model.ACLConfigAction"
                },
                "block_min": {
                    "type": "integer"
                },
                "city": {
                    "description": "obsolete",
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "country": {
                    "description": "obsolete",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "denied_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "province": {
                    "description": "obsolete",
                    "type": "string"
                },
                "reason": {
                    "$ref": "#/definitions/model.ACLConfigType"
                },
                "result": {
                    "type": "string"
                },
                "site_comment": {
                    "type": "string"
                },
                "site_icon": {
                    "type": "string"
                },
                "site_id": {
                    "type": "integer"
                },
                "site_server_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "site_title": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "valid_before": {
                    "type": "string"
                }
            }
        },
        "acl.SiteACLConfig": {
            "type": "object",
            "properties": {
                "attack": {
                    "$ref": "#/definitions/acl.Config"
                },
                "error": {
                    "$ref": "#/definitions/acl.Config"
                },
                "req": {
                    "$ref": "#/definitions/acl.Config"
                }
            }
        },
        "api.ACLRelieveRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                }
            }
        },
        "api.ChallengeLog": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "dur_sec": {
                    "type": "integer"
                },
                "ended_at": {
                    "type": "integer"
                },
                "event_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "pass_count": {
                    "type": "integer"
                },
                "province": {
                    "type": "string"
                },
                "rule_id": {
                    "type": "integer"
                },
                "site_comment": {
                    "type": "string"
                },
                "site_icon": {
                    "type": "string"
                },
                "site_id": {
                    "type": "integer"
                },
                "site_server_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "site_title": {
                    "type": "string"
                },
                "started_at": {
                    "type": "integer"
                },
                "trigger_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "api.DashboardTrendRes": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Node"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.DeleteIPGroupReq": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.GetCertListRes": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ListCertItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.GetChallengeLogsRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ChallengeLog"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.GetDashboardUserCountsReq": {
            "type": "object",
            "properties": {
                "ip": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Node"
                    }
                },
                "pv": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Node"
                    }
                },
                "today_ip": {
                    "type": "integer"
                },
                "today_pv": {
                    "type": "integer"
                },
                "today_uv": {
                    "type": "integer"
                },
                "uv": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Node"
                    }
                }
            }
        },
        "api.GetDetectorRes": {
            "type": "object",
            "properties": {
                "mode": {
                    "type": "integer"
                }
            }
        },
        "api.GetDowngradeVersionRes": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "api.GetGlobalModeConfigRes": {
            "type": "object",
            "properties": {
                "semantics": {
                    "$ref": "#/definitions/model.PolicyGroup"
                }
            }
        },
        "api.GetIPGroupByLinkRes": {
            "type": "object",
            "properties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.GetIPGroupDetailRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/ipg.IPGroupVO"
                }
            }
        },
        "api.GetIPGroupRes": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ipg.IPGroupVO"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.GetManagerInfoRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.ManagerInfo"
                }
            }
        },
        "api.GetSkynetRuleRes": {
            "type": "object",
            "properties": {
                "rules": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/detect.SkynetInfo"
                    }
                }
            }
        },
        "api.GetSpecialPageRes": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "api.GlobalModeConfigParams": {
            "type": "object",
            "required": [
                "semantics"
            ],
            "properties": {
                "semantics": {
                    "$ref": "#/definitions/model.PolicyGroup"
                }
            }
        },
        "api.ListCertItem": {
            "type": "object",
            "properties": {
                "acme_message": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expired": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "issuer": {
                    "type": "string"
                },
                "related_sites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "revoked": {
                    "type": "boolean"
                },
                "self_signature": {
                    "type": "boolean"
                },
                "trusted": {
                    "type": "boolean"
                },
                "type": {
                    "type": "integer"
                },
                "valid_before": {
                    "type": "string"
                }
            }
        },
        "api.ListSpecialPageItem": {
            "type": "object",
            "properties": {
                "custom": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.LogMaxDayConfig": {
            "type": "object",
            "properties": {
                "max_day": {
                    "type": "integer"
                },
                "max_stat_day": {
                    "type": "integer"
                }
            }
        },
        "api.Node": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "api.PostAppendIPGroupRequest": {
            "type": "object",
            "properties": {
                "ip_group_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.PostDetectorReq": {
            "type": "object",
            "properties": {
                "mode": {
                    "type": "integer"
                },
                "ts": {
                    "type": "integer"
                }
            }
        },
        "api.PutManagerInfoReq": {
            "type": "object",
            "properties": {
                "common_color": {
                    "$ref": "#/definitions/model.CommonColor"
                },
                "error_color": {
                    "$ref": "#/definitions/model.ErrorColor"
                },
                "manager_info": {
                    "type": "string"
                },
                "page_manager_info": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "api.PutSkynetRuleReq": {
            "type": "object",
            "properties": {
                "global": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            }
        },
        "api.PutSkynetRuleSwitchReq": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "api.PutSpecialPageRequest": {
            "type": "object",
            "properties": {
                "recover": {
                    "type": "boolean"
                },
                "response_html": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.PutThreatInfoRequest": {
            "type": "object",
            "properties": {
                "share_enabled": {
                    "type": "boolean"
                }
            }
        },
        "api.PutThreatLibRequest": {
            "type": "object",
            "properties": {
                "use_commercial_lib": {
                    "description": "是否使用商业 IP 库",
                    "type": "boolean"
                }
            }
        },
        "api.QpsRes": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {}
                    }
                }
            }
        },
        "api.SetShareFingerprintRequest": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "api.TestWebHookConfig": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "audit_log.ListAuditLogItem": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "audit_log.ListAuditLogRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/audit_log.ListAuditLogItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "auth.GetCsrfTokenRes": {
            "type": "object",
            "properties": {
                "csrf_token": {
                    "type": "string"
                }
            }
        },
        "auth.LoginReq": {
            "type": "object",
            "properties": {
                "csrf_token": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.LoginRes": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "jwt": {
                    "type": "string"
                },
                "tfa_bind_url": {
                    "type": "string"
                },
                "tfa_binded": {
                    "type": "boolean"
                },
                "tfa_enabled": {
                    "type": "boolean"
                }
            }
        },
        "auth.TfaReq": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "csrf_token": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "auth.TfaRes": {
            "type": "object",
            "properties": {
                "jwt": {
                    "type": "string"
                }
            }
        },
        "auth_defense.GetAuthDefenseLogsRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/auth_defense.Log"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "auth_defense.Log": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deny_count": {
                    "type": "integer"
                },
                "dur_sec": {
                    "type": "integer"
                },
                "ended_at": {
                    "type": "integer"
                },
                "event_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "pass_count": {
                    "type": "integer"
                },
                "province": {
                    "type": "string"
                },
                "rule_id": {
                    "type": "integer"
                },
                "site_comment": {
                    "type": "string"
                },
                "site_icon": {
                    "type": "string"
                },
                "site_id": {
                    "type": "integer"
                },
                "site_server_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "site_title": {
                    "type": "string"
                },
                "started_at": {
                    "type": "integer"
                },
                "trigger_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "cert.CertDetail": {
            "type": "object",
            "properties": {
                "acme": {
                    "$ref": "#/definitions/cert.acmeVO"
                },
                "id": {
                    "type": "integer"
                },
                "manual": {
                    "$ref": "#/definitions/cert.manual"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "cert.acmeVO": {
            "type": "object",
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "cert.manual": {
            "type": "object",
            "properties": {
                "crt": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "cloud.SubCloudPolicyReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "consts.UserRole": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "x-enum-varnames": [
                "UserRoleUnknown",
                "UserRoleAdmin",
                "UserRoleManager",
                "UserRoleConfig",
                "UserRoleAudit",
                "UserRoleMax"
            ]
        },
        "detect.SkynetInfo": {
            "type": "object",
            "properties": {
                "attack_type": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "risk_level": {
                    "type": "integer"
                }
            }
        },
        "git_in_chaitin_net_patronus_safeline-2_management_webserver_api_cloud.ListItem": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "boolean"
                },
                "auth_rule": {
                    "type": "integer"
                },
                "black_rule": {
                    "type": "integer"
                },
                "captcha_rule": {
                    "type": "integer"
                },
                "compatible": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "org_name": {
                    "type": "string"
                },
                "policy_name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "white_rule": {
                    "type": "integer"
                }
            }
        },
        "ipg.IPGroupVO": {
            "type": "object",
            "properties": {
                "builtin": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "reference": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ACLConfigAction": {
            "type": "string",
            "enum": [
                "ban",
                "challenge"
            ],
            "x-enum-varnames": [
                "ACLConfigActionBan",
                "ACLConfigActionChallenge"
            ]
        },
        "model.ACLConfigType": {
            "type": "string",
            "enum": [
                "req",
                "attack",
                "error"
            ],
            "x-enum-comments": {
                "ACLConfigTypeAttack": "高频攻击",
                "ACLConfigTypeError": "高频错误",
                "ACLConfigTypeReq": "高频请求"
            },
            "x-enum-varnames": [
                "ACLConfigTypeReq",
                "ACLConfigTypeAttack",
                "ACLConfigTypeError"
            ]
        },
        "model.AccountConfig": {
            "type": "object",
            "required": [
                "access_whitelist"
            ],
            "properties": {
                "access_whitelist": {
                    "description": "ip 或 cidr",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expired_unit": {
                    "description": "过期时间单位, day, hour, minute",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.ExpireUnit"
                        }
                    ]
                },
                "login_expire": {
                    "description": "过期秒数",
                    "type": "integer"
                },
                "password_complex": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PasswordChar"
                    }
                },
                "password_length": {
                    "type": "integer"
                }
            }
        },
        "model.Chaos": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "html_encryption": {
                    "type": "boolean"
                },
                "html_fast_decryption": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "img_encryption": {
                    "type": "boolean"
                },
                "img_text": {
                    "type": "string"
                },
                "img_watermark": {
                    "type": "string"
                },
                "is_enabled": {
                    "type": "boolean"
                },
                "js_encryption": {
                    "type": "boolean"
                },
                "js_path": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "website_id": {
                    "type": "integer"
                }
            }
        },
        "model.CommonColor": {
            "type": "object",
            "properties": {
                "font_color": {
                    "type": "string"
                },
                "light_font_color": {
                    "type": "string"
                },
                "light_primary_color": {
                    "type": "string"
                },
                "primary_color": {
                    "type": "string"
                },
                "success_color": {
                    "type": "string"
                }
            }
        },
        "model.DetectLog": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "integer"
                },
                "attack_type": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "decode_path": {
                    "type": "string"
                },
                "dst_ip": {
                    "type": "string"
                },
                "dst_port": {
                    "type": "integer"
                },
                "eventId": {
                    "type": "string"
                },
                "event_id": {
                    "description": "to eliminate ambiguous",
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "string"
                },
                "lng": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "module": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                },
                "policy_name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "integer"
                },
                "province": {
                    "type": "string"
                },
                "query_string": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "req_body": {
                    "type": "string"
                },
                "req_header": {
                    "type": "string"
                },
                "risk_level": {
                    "type": "integer"
                },
                "rsp_body": {
                    "type": "string"
                },
                "rsp_header": {
                    "type": "string"
                },
                "rule_id": {
                    "type": "string"
                },
                "rule_id_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "short_rule_id": {
                    "type": "string"
                },
                "site_uuid": {
                    "type": "string"
                },
                "socket_ip": {
                    "type": "string"
                },
                "src_ip": {
                    "type": "string"
                },
                "src_port": {
                    "type": "integer"
                },
                "status_code": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "integer"
                },
                "url_path": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "model.ErrorColor": {
            "type": "object",
            "properties": {
                "warning_color": {
                    "type": "string"
                },
                "warning_font_color": {
                    "type": "string"
                },
                "warning_light_font_color": {
                    "type": "string"
                }
            }
        },
        "model.ExpireUnit": {
            "type": "string",
            "enum": [
                "day",
                "hour",
                "minute"
            ],
            "x-enum-varnames": [
                "ExpireUnitDay",
                "ExpireUnitHour",
                "ExpireUnitMinute"
            ]
        },
        "model.HttpHeader": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "op": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "val": {
                    "type": "string"
                }
            }
        },
        "model.Intelligence": {
            "type": "object",
            "properties": {
                "ip_group_id": {
                    "type": "integer"
                },
                "policy_rule_id": {
                    "type": "integer"
                },
                "share_enabled": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "use_commercial_lib": {
                    "type": "boolean"
                }
            }
        },
        "model.LoadBalanceConfig": {
            "type": "object",
            "properties": {
                "balance_type": {
                    "type": "integer"
                }
            }
        },
        "model.ManagerInfo": {
            "type": "object",
            "properties": {
                "common_color": {
                    "$ref": "#/definitions/model.CommonColor"
                },
                "error_color": {
                    "$ref": "#/definitions/model.ErrorColor"
                },
                "manager_info": {
                    "type": "string"
                },
                "page_manager_info": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "model.PasswordChar": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "PasswordCharDigit",
                "PasswordCharSymbol",
                "PasswordCharUpper",
                "PasswordCharLower",
                "PasswordCharMax"
            ]
        },
        "model.PolicyAction": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                999,
                999
            ],
            "x-enum-varnames": [
                "PolicyActionAllow",
                "PolicyActionDeny",
                "PolicyActionChallenge",
                "PolicyActionAuthDefense",
                "PolicyActionChaos",
                "PolicyActionWaitingRoom",
                "PolicyActionMix",
                "PolicyActionMax"
            ]
        },
        "model.PolicyGroup": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "model.PolicyUser": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.ProxyConfig": {
            "type": "object",
            "properties": {
                "br": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "created_at": {
                    "type": "string"
                },
                "default_server": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "force_https": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "global_ipv6": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "gzip": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "host": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                },
                "hsts": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "hsts_max_age": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                },
                "hsts_preload": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "hsts_sub": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "http2": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "http3": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "http_1.0": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "http_headers": {
                    "$ref": "#/definitions/model.ProxyItem-model_HttpHeaders"
                },
                "id": {
                    "type": "integer"
                },
                "ip_source": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                },
                "ip_value": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                },
                "ipv6": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "reset_xff": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "site_id": {
                    "type": "integer"
                },
                "ssl_ciphers": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                },
                "ssl_protocols": {
                    "description": "SSLMode      ProxyItem[string] `gorm:\"column:ssl_mode;type:jsonb;\" json:\"ssl_mode\"`",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.ProxyItem-string"
                        }
                    ]
                },
                "updated_at": {
                    "type": "string"
                },
                "xfh": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                },
                "xfp": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                }
            }
        },
        "model.ProxyItem-bool": {
            "type": "object",
            "properties": {
                "global": {
                    "type": "boolean"
                },
                "value": {
                    "type": "boolean"
                }
            }
        },
        "model.ProxyItem-model_HttpHeaders": {
            "type": "object",
            "properties": {
                "global": {
                    "type": "boolean"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.HttpHeader"
                    }
                }
            }
        },
        "model.ProxyItem-string": {
            "type": "object",
            "properties": {
                "global": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.ReceiverConfig": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "log_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "rfc": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.ReportData": {
            "type": "object",
            "properties": {
                "attack": {
                    "$ref": "#/definitions/model.ReportDataAttack"
                },
                "count": {
                    "$ref": "#/definitions/model.ReportDataCount"
                },
                "geo": {
                    "$ref": "#/definitions/model.ReportDataGeo"
                },
                "trend": {
                    "$ref": "#/definitions/model.ReportDataTrend"
                }
            }
        },
        "model.ReportDataAttack": {
            "type": "object",
            "properties": {
                "src_ip": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReportDataAttackGeoItem"
                    }
                },
                "type": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReportDataAttackItem"
                    }
                },
                "website": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReportDataAttackItem"
                    }
                }
            }
        },
        "model.ReportDataAttackGeoItem": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "country": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                }
            }
        },
        "model.ReportDataAttackItem": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "model.ReportDataCount": {
            "type": "object",
            "properties": {
                "intercept": {
                    "type": "integer"
                },
                "ip": {
                    "type": "integer"
                },
                "request": {
                    "type": "integer"
                },
                "uv": {
                    "type": "integer"
                },
                "website": {
                    "type": "integer"
                }
            }
        },
        "model.ReportDataGeo": {
            "type": "object",
            "properties": {
                "intercept_country": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReportDataGeoItem"
                    }
                },
                "intercept_province": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReportDataGeoItem"
                    }
                },
                "request_country": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReportDataGeoItem"
                    }
                },
                "request_province": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReportDataGeoItem"
                    }
                }
            }
        },
        "model.ReportDataGeoItem": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "model.ReportDataTrend": {
            "type": "object",
            "properties": {
                "intercept": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReportDataTrendItem"
                    }
                },
                "request": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReportDataTrendItem"
                    }
                }
            }
        },
        "model.ReportDataTrendItem": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "trend_time": {
                    "type": "integer"
                }
            }
        },
        "model.Resource": {
            "type": "object",
            "properties": {
                "content_length": {
                    "type": "integer"
                },
                "content_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "path": {
                    "description": "resource content",
                    "type": "string"
                },
                "req_header": {
                    "type": "string"
                },
                "req_today": {
                    "type": "integer"
                },
                "response_time": {
                    "type": "integer"
                },
                "site_id": {
                    "type": "integer"
                },
                "status_code": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.RulePattern": {
            "type": "object",
            "properties": {
                "k": {
                    "type": "string"
                },
                "op": {
                    "type": "string"
                },
                "sub_k": {
                    "type": "string"
                },
                "v": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.SiteCache": {
            "type": "object",
            "properties": {
                "content_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "prefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.WaitingRoom": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_enabled": {
                    "type": "boolean"
                },
                "max_concurrent": {
                    "description": "当前允许最大同时在线的人数",
                    "type": "integer"
                },
                "max_waiting": {
                    "description": "当前允许最大同时排队的人数",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "session_timeout": {
                    "description": "服务队列中 session 的存活周期",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "website_id": {
                    "type": "integer"
                }
            }
        },
        "model.WebsiteResource": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Resource"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "policy.DeletePolicyReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "policy.GetPolicyRes": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "0 -\u003e allow, 1 -\u003e deny",
                    "type": "integer"
                },
                "auth_rule": {
                    "type": "integer"
                },
                "black_rule": {
                    "type": "integer"
                },
                "builtin": {
                    "type": "boolean"
                },
                "captcha_rule": {
                    "type": "integer"
                },
                "cloud_id": {
                    "type": "integer"
                },
                "cloud_total": {
                    "type": "integer"
                },
                "compatible": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "expire": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_enabled": {
                    "type": "boolean"
                },
                "level": {
                    "type": "integer"
                },
                "log": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "pass_count": {
                    "type": "integer"
                },
                "pattern": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/model.RulePattern"
                        }
                    }
                },
                "replay": {
                    "type": "boolean"
                },
                "req_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PolicyUser"
                    }
                },
                "white_rule": {
                    "type": "integer"
                }
            }
        },
        "policy.ListPolicyRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/policy.GetPolicyRes"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "policy.PostPolicyReq": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/model.PolicyAction"
                },
                "expire": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "log": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "pattern": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/model.RulePattern"
                        }
                    }
                },
                "user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PolicyUser"
                    }
                }
            }
        },
        "policy.PutPolicyReq": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/model.PolicyAction"
                },
                "expire": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "log": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "pattern": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/model.RulePattern"
                        }
                    }
                },
                "user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PolicyUser"
                    }
                }
            }
        },
        "policy.PutPolicySwitchReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_enabled": {
                    "type": "boolean"
                }
            }
        },
        "proxy.Config": {
            "type": "object",
            "properties": {
                "br": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "default_server": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "force_https": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "gzip": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "host": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                },
                "hsts": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "hsts_max_age": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                },
                "hsts_preload": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "hsts_sub": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "http2": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "http3": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "http_1.0": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "http_headers": {
                    "$ref": "#/definitions/model.ProxyItem-model_HttpHeaders"
                },
                "ip_source": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                },
                "ip_value": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                },
                "ipv6": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "reset_xff": {
                    "$ref": "#/definitions/model.ProxyItem-bool"
                },
                "ssl_ciphers": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                },
                "ssl_protocols": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                },
                "xfh": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                },
                "xfp": {
                    "$ref": "#/definitions/model.ProxyItem-string"
                }
            }
        },
        "record.Event": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "deny_count": {
                    "type": "integer"
                },
                "dst_port": {
                    "type": "integer"
                },
                "end_at": {
                    "type": "integer"
                },
                "finished": {
                    "type": "boolean"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "pass_count": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "province": {
                    "type": "string"
                },
                "start_at": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "record.EventListRes": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/record.Event"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "record.GetDetectLogListRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DetectLog"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "report.CreateReq": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "begin_time": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "report.GetRes": {
            "type": "object",
            "properties": {
                "begin_time": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.ReportData"
                },
                "end_time": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "report.ListItem": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "report.ListRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.ListItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "resource.RemoveReq": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "resource.UpdateExcludesReq": {
            "type": "object",
            "properties": {
                "content_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "prefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.JSONBody": {
            "type": "object",
            "properties": {
                "data": {},
                "err": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "river.Edition": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Edition_EDITION_UNKOWN",
                "Edition_EDITION_PROFESSIONAL",
                "Edition_EDITION_ENTERPRISE"
            ]
        },
        "site.AddStaticReq": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "dir": {
                    "type": "boolean"
                },
                "page": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "zip": {
                    "type": "boolean"
                }
            }
        },
        "site.AntiTamperCreateReq": {
            "type": "object",
            "properties": {
                "resource_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "site.AntiTamperDetailRes": {
            "type": "object",
            "properties": {
                "cache_sha256": {
                    "type": "string"
                },
                "cache_time": {
                    "type": "integer"
                },
                "change_sha256": {
                    "type": "string"
                },
                "change_time": {
                    "type": "integer"
                },
                "changed": {
                    "type": "boolean"
                },
                "content_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "site_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "site.AntiTamperListData": {
            "type": "object",
            "properties": {
                "cache_time": {
                    "type": "integer"
                },
                "changed": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "site_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "site.AntiTamperListRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/site.AntiTamperListData"
                    }
                },
                "refresh_state": {
                    "type": "string"
                },
                "refresh_time": {
                    "type": "integer"
                }
            }
        },
        "site.DeleteStaticReq": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "path": {
                    "type": "string"
                }
            }
        },
        "site.DeleteWebsiteReq": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "site.GetWebsiteDetailRes": {
            "type": "object",
            "properties": {
                "access_log_limit": {
                    "type": "integer"
                },
                "acl_enabled": {
                    "type": "boolean"
                },
                "acl_response_html_path": {
                    "type": "string"
                },
                "acl_response_status_code": {
                    "type": "integer"
                },
                "auth_defense_id": {
                    "type": "integer"
                },
                "auth_defense_user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PolicyUser"
                    }
                },
                "bad_gateway_html_path": {
                    "type": "string"
                },
                "bad_gateway_status_code": {
                    "type": "integer"
                },
                "cc_bot": {
                    "type": "boolean"
                },
                "cert_filename": {
                    "description": "3.5.0 存储时废弃，tcd通信时仍使用",
                    "type": "string"
                },
                "cert_id": {
                    "type": "integer"
                },
                "cert_type": {
                    "description": "0 -\u003e no cert, 1 -\u003e upload, 2 -\u003e self-signed, 3 -\u003e choose mgt cert\nCertType 3.5.0 存储时废弃",
                    "type": "integer"
                },
                "challenge_id": {
                    "type": "integer"
                },
                "chaos_id": {
                    "type": "integer"
                },
                "chaos_is_enabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "custom_location": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "denied_value": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "error_log_limit": {
                    "type": "integer"
                },
                "exclude_content_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exclude_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "forbidden_html_path": {
                    "type": "string"
                },
                "forbidden_status_code": {
                    "type": "integer"
                },
                "gateway_timeout_html_path": {
                    "type": "string"
                },
                "gateway_timeout_status_code": {
                    "type": "integer"
                },
                "health_state": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/site.HealthState"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "index": {
                    "type": "string"
                },
                "init": {
                    "type": "boolean"
                },
                "is_enabled": {
                    "type": "boolean"
                },
                "key_filename": {
                    "type": "string"
                },
                "load_balance": {
                    "$ref": "#/definitions/model.LoadBalanceConfig"
                },
                "mode": {
                    "description": "0 -\u003e defense, 1-\u003e offline, 2 -\u003e dry run",
                    "type": "integer"
                },
                "not_found_html_path": {
                    "type": "string"
                },
                "not_found_status_code": {
                    "type": "integer"
                },
                "offline_html_path": {
                    "type": "string"
                },
                "offline_status_code": {
                    "type": "integer"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "redirect_status_code": {
                    "type": "integer"
                },
                "req_value": {
                    "type": "integer"
                },
                "server_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "static": {
                    "type": "boolean"
                },
                "static_default": {
                    "type": "integer"
                },
                "tamper_refresh": {
                    "description": "防篡改刷新时间（毫秒）",
                    "type": "integer"
                },
                "tamper_refresh_state": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "upstreams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "wr_id": {
                    "type": "integer"
                }
            }
        },
        "site.GetWebsiteItem": {
            "type": "object",
            "properties": {
                "access_log_limit": {
                    "type": "integer"
                },
                "acl_enabled": {
                    "type": "boolean"
                },
                "acl_response_html_path": {
                    "type": "string"
                },
                "acl_response_status_code": {
                    "type": "integer"
                },
                "auth_defense_id": {
                    "type": "integer"
                },
                "bad_gateway_html_path": {
                    "type": "string"
                },
                "bad_gateway_status_code": {
                    "type": "integer"
                },
                "cc_bot": {
                    "type": "boolean"
                },
                "cert_filename": {
                    "description": "3.5.0 存储时废弃，tcd通信时仍使用",
                    "type": "string"
                },
                "cert_id": {
                    "type": "integer"
                },
                "cert_type": {
                    "description": "0 -\u003e no cert, 1 -\u003e upload, 2 -\u003e self-signed, 3 -\u003e choose mgt cert\nCertType 3.5.0 存储时废弃",
                    "type": "integer"
                },
                "challenge_id": {
                    "type": "integer"
                },
                "chaos_id": {
                    "type": "integer"
                },
                "chaos_is_enabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "custom_location": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "denied_value": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "error_log_limit": {
                    "type": "integer"
                },
                "exclude_content_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exclude_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "forbidden_html_path": {
                    "type": "string"
                },
                "forbidden_status_code": {
                    "type": "integer"
                },
                "gateway_timeout_html_path": {
                    "type": "string"
                },
                "gateway_timeout_status_code": {
                    "type": "integer"
                },
                "health_state": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/site.HealthState"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "index": {
                    "type": "string"
                },
                "init": {
                    "type": "boolean"
                },
                "is_enabled": {
                    "type": "boolean"
                },
                "key_filename": {
                    "type": "string"
                },
                "load_balance": {
                    "$ref": "#/definitions/model.LoadBalanceConfig"
                },
                "mode": {
                    "description": "0 -\u003e defense, 1-\u003e offline, 2 -\u003e dry run",
                    "type": "integer"
                },
                "not_found_html_path": {
                    "type": "string"
                },
                "not_found_status_code": {
                    "type": "integer"
                },
                "offline_html_path": {
                    "type": "string"
                },
                "offline_status_code": {
                    "type": "integer"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "redirect_status_code": {
                    "type": "integer"
                },
                "req_value": {
                    "type": "integer"
                },
                "server_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "static": {
                    "type": "boolean"
                },
                "static_default": {
                    "type": "integer"
                },
                "tamper_refresh": {
                    "description": "防篡改刷新时间（毫秒）",
                    "type": "integer"
                },
                "tamper_refresh_state": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "upstreams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "wr_id": {
                    "type": "integer"
                }
            }
        },
        "site.GetWebsiteRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/site.GetWebsiteItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "site.HealthState": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "state": {
                    "type": "integer"
                }
            }
        },
        "site.ListLogItem": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "site.NginxConfigGetRes": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "string"
                },
                "custom_location": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "site.NginxConfigUpdateReq": {
            "type": "object",
            "properties": {
                "custom_location": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "site.PostWebsiteHealthcheckReq": {
            "type": "object",
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "upstreams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "site.PubWebsiteChallengeReq": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "expire": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "replay": {
                    "type": "boolean"
                }
            }
        },
        "site.PutWebsiteDefenseReq": {
            "type": "object",
            "properties": {
                "auth_defense_user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PolicyUser"
                    }
                },
                "enable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "site.PutWebsiteModeRequest": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "mode": {
                    "type": "integer"
                }
            }
        },
        "site.RenameStaticReq": {
            "type": "object",
            "required": [
                "new_path",
                "old_path"
            ],
            "properties": {
                "copy": {
                    "type": "boolean"
                },
                "new_path": {
                    "type": "string"
                },
                "old_path": {
                    "type": "string"
                }
            }
        },
        "site.SetWebsiteWaitingRoomReq": {
            "type": "object",
            "properties": {
                "is_enabled": {
                    "type": "boolean"
                },
                "max_concurrent": {
                    "description": "当前允许最大同时在线的人数",
                    "type": "integer"
                },
                "session_timeout": {
                    "description": "服务队列中 session 的存活周期",
                    "type": "integer"
                }
            }
        },
        "site.WaitingRoomLog": {
            "type": "object",
            "properties": {
                "avg_wait_sec": {
                    "type": "integer"
                },
                "bounce_rate": {
                    "type": "number"
                },
                "cur_waiting": {
                    "type": "integer"
                },
                "dur_sec": {
                    "type": "integer"
                },
                "ended_at": {
                    "type": "integer"
                },
                "max_concurrent": {
                    "type": "integer"
                },
                "rule_id": {
                    "type": "integer"
                },
                "site_comment": {
                    "type": "string"
                },
                "site_icon": {
                    "type": "string"
                },
                "site_id": {
                    "type": "integer"
                },
                "site_server_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "site_title": {
                    "type": "string"
                },
                "started_at": {
                    "type": "integer"
                },
                "top_waiting": {
                    "type": "integer"
                },
                "total_waiting": {
                    "type": "integer"
                }
            }
        },
        "site.WaitingRoomLogs": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/site.WaitingRoomLog"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "site.WebsiteChaosReq": {
            "type": "object",
            "properties": {
                "html_encryption": {
                    "type": "boolean"
                },
                "html_fast_decryption": {
                    "type": "boolean"
                },
                "img_encryption": {
                    "type": "boolean"
                },
                "img_text": {
                    "type": "string"
                },
                "img_watermark": {
                    "type": "string"
                },
                "is_enabled": {
                    "type": "boolean"
                },
                "js_encryption": {
                    "type": "boolean"
                },
                "js_path": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "site.WebsiteReq": {
            "type": "object",
            "properties": {
                "cert_id": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "index": {
                    "type": "string"
                },
                "load_balance": {
                    "$ref": "#/definitions/model.LoadBalanceConfig"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "redirect_status_code": {
                    "type": "integer"
                },
                "server_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "static_default": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "upstreams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "stat.AdvanceAccessRes": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "integer"
                },
                "ip": {
                    "type": "integer"
                },
                "session": {
                    "type": "integer"
                }
            }
        },
        "stat.AdvanceAttackRes": {
            "type": "object",
            "properties": {
                "attack_ip": {
                    "type": "integer"
                },
                "intercept": {
                    "type": "object",
                    "properties": {
                        "auth_defense": {
                            "type": "integer"
                        },
                        "block": {
                            "type": "integer"
                        },
                        "challenge": {
                            "type": "integer"
                        },
                        "offline": {
                            "type": "integer"
                        },
                        "rate_limit": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "stat.AdvanceClientRes": {
            "type": "object",
            "properties": {
                "browser": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "browser": {
                                "type": "string"
                            },
                            "count": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "os": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer"
                            },
                            "os": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "stat.AdvanceErrorStatusCodeRes": {
            "type": "object",
            "properties": {
                "error_4xx": {
                    "type": "integer"
                },
                "error_5xx": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "stat.BasicAccessRes": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "integer"
                }
            }
        },
        "stat.BasicAttackRes": {
            "type": "object",
            "properties": {
                "attack_ip": {
                    "type": "integer"
                },
                "intercept": {
                    "type": "object",
                    "properties": {
                        "auth_defense": {
                            "type": "integer"
                        },
                        "block": {
                            "type": "integer"
                        },
                        "challenge": {
                            "type": "integer"
                        },
                        "offline": {
                            "type": "integer"
                        },
                        "rate_limit": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "stat.BasicErrorStatusCodeRes": {
            "type": "object",
            "properties": {
                "error_4xx": {
                    "type": "integer"
                },
                "error_5xx": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "system.AboutLicense": {
            "type": "object",
            "properties": {
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "system.AboutRes": {
            "type": "object",
            "properties": {
                "cert_id": {
                    "type": "integer"
                },
                "deprecated": {
                    "type": "boolean"
                },
                "license": {
                    "$ref": "#/definitions/system.AboutLicense"
                },
                "machine_id": {
                    "type": "string"
                },
                "outdated": {
                    "type": "boolean"
                },
                "oversea": {
                    "type": "boolean"
                },
                "slave": {
                    "type": "boolean"
                },
                "staging": {
                    "type": "boolean"
                },
                "time": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "system.CodeApplyInfoRes": {
            "type": "object",
            "properties": {
                "expired_at": {
                    "type": "integer"
                },
                "org_id": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "purchased": {
                    "type": "boolean"
                },
                "river_url": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/consts.UserRole"
                },
                "state": {
                    "type": "string"
                },
                "timeout": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "integer"
                },
                "version": {
                    "$ref": "#/definitions/river.Edition"
                }
            }
        },
        "system.CodeApplyReq": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "system.UpdateReq": {
            "type": "object",
            "properties": {
                "cert_id": {
                    "type": "integer"
                }
            }
        },
        "tcd.FileInfo": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "content_type": {
                    "type": "string"
                },
                "dir": {
                    "type": "boolean"
                },
                "modify_time": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "user.CreateUserReq": {
            "type": "object",
            "required": [
                "password",
                "role",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "role": {
                    "maximum": 4,
                    "minimum": 1,
                    "allOf": [
                        {
                            "$ref": "#/definitions/consts.UserRole"
                        }
                    ]
                },
                "tfa_enabled": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.CreateUserResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "user.DeleteUserReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "user.GetUserListRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.User"
                    }
                }
            }
        },
        "user.UpdateUserReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/consts.UserRole"
                },
                "tfa_enabled": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "last_login": {
                    "type": "integer"
                },
                "password_enabled": {
                    "type": "boolean"
                },
                "role": {
                    "$ref": "#/definitions/consts.UserRole"
                },
                "tfa_binded": {
                    "type": "boolean"
                },
                "tfa_enabled": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "webhook.DingTalkConfig": {
            "type": "object",
            "properties": {
                "sign": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "webhook.DiscordConfig": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "webhook.FlyBookConfig": {
            "type": "object",
            "properties": {
                "sign": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "webhook.QiyeWeixinConfig": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "webhook.TelegramConfig": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "webhook.WebhookConfig": {
            "type": "object",
            "properties": {
                "acl_request_enable": {
                    "type": "boolean"
                },
                "attack_enable": {
                    "type": "boolean"
                },
                "ding_talk": {
                    "$ref": "#/definitions/webhook.DingTalkConfig"
                },
                "discord": {
                    "$ref": "#/definitions/webhook.DiscordConfig"
                },
                "enable": {
                    "type": "boolean"
                },
                "fly_book": {
                    "$ref": "#/definitions/webhook.FlyBookConfig"
                },
                "qiye_weixin": {
                    "$ref": "#/definitions/webhook.QiyeWeixinConfig"
                },
                "telegram": {
                    "$ref": "#/definitions/webhook.TelegramConfig"
                }
            }
        }
    }
}